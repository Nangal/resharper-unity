plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.1.1'
    id 'org.jetbrains.intellij' version '0.2.8'
}

group 'com.jetbrains'

// TODO: Get this version from e.g. Packaging.props
version '1.8.0'

if(!ext.has("pluginConfiguration")) {
    ext.pluginConfiguration = "Release"
}
println("ext.pluginConfiguration=" +  ext.pluginConfiguration)

ext.kotlin_version = '1.1.1'
ext.nupkg_path = "$projectDir/../resharper/build/resharper-unity.rider/bin/$pluginConfiguration/JetBrains.Unity.$version-rider.nupkg"

sourceCompatibility = 1.8
targetCompatibility = 1.8

intellij {
    type = 'RS'

    // Download a version of Rider to compile and run with. Either set `version` to
    // 'LATEST-TRUNK-SNAPSHOT' or 'LATEST-EAP-SNAPSHOT' or a known version.
    // This will download from www.jetbrains.com/intellij-repository/snapshots or
    // www.jetbrains.com/intellij-repository/releases, respectively.
    // Note that there's no guarantee that these are kept up to date
    // version = 'LATEST-TRUNK-SNAPSHOT'
    // If the build isn't available in intellij-repository, use an installed version via `localPath`
    // localPath = '/Users/matt/Library/Application Support/JetBrains/Toolbox/apps/Rider/ch-1/171.4089.265/Rider EAP.app/Contents'
    // localPath = "C:\\Users\\Ivan.Shakhov\\AppData\\Local\\JetBrains\\Toolbox\\apps\\Rider\\ch-0\\171.4456.459"

    def dir = file('dependencies')
    if (dir.exists()) {
      localPath = dir.absolutePath
    }
    else {
      version = '171.4456.199'  // EAP22
    }

    // Sources aren't available for Rider
    downloadSources = false
}

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
}

assert file(nupkg_path).exists()

prepareSandbox {
    from(nupkg_path, {
        into "$intellij.pluginName"
    })
}

// The current 171.4089.265 snapshot doesn't set the executable bit for
// lib/ReSharperHost/runtime.sh, and is missing macos-x64
project.afterEvaluate {
    if (System.getProperty('os.name').toLowerCase().contains('mac os')) {
        def dep = file("$projectDir/build/rider$intellij.type-$intellij.version")
        if (dep.exists()) {
            exec {
                it.commandLine 'chmod', '744', "$projectDir/build/rider$intellij.type-$intellij.version/lib/ReSharperHost/runtime.sh"
            }
        }

        // TODO: Copy macos-x64 from somewhere. But where?
    }
}
